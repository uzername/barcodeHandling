<html>
    <head>
        <meta charset="UTF8">
        <link rel="stylesheet" type="text/css" href="../../webtemplatesresources/commonbar.css" >
        <title> {{ localizedmessages['header']|default('SM_NM Scanner') }} </title>
        <script type="text/javascript" src="../webtemplatesresources/jquery-3.3.1.min.js">  </script>
        <link rel="stylesheet" type="text/css" href='../webtemplatesresources/timepicker/jquery.timepicker.min.css' >
        <script type="text/javascript" src="../webtemplatesresources/timepicker/jquery.timepicker.min.js">  </script>
        {# https://www.w3schools.com/css/css_tooltip.asp #}
        <style>
        /* Tooltip container */
        .tooltip {
            position: relative;
            display: inline-block;
            border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
        }
        /* Tooltip text */
        .tooltip .tooltiptext {
            visibility: hidden;
            width: 120px;
            background-color: black;
            color: #fff;
            text-align: center;
            padding: 5px 0;
            border-radius: 6px;

            /* Position the tooltip text - see examples below! */
            position: absolute;
            z-index: 1;
        }
        /* Show the tooltip text when you mouse over the tooltip container */
        .tooltip:hover .tooltiptext {
            visibility: visible;
        }
        .div-formborder {
            border-bottom: 1px dashed black; 
            padding-bottom: 5px; margin-bottom: 5px
        }
        
        #myformcustomtime-errors {
            color:darkred;
        }
        .myformcustomtime-errorborder {
            border:1px solid darkred;
        }
        </style>
        
        <script>
            function recalculatelimitbyworkday(checkboxElem) {
                /*
                if (checkboxElem.checked === false) { 
                    document.getElementById('usetimeonlylimitedbyworkday').setAttribute("disabled", "disabled");
                    document.getElementById('usetimeonlylimitedbyworkday').checked = false;
                } else {
                    
                    document.getElementById('usetimeonlylimitedbyworkday').removeAttribute("disabled");
                }
                */
            }
            // https://github.com/jonthornton/jquery-timepicker
            $(document).ready(function() {
                $('#TIMESTART').timepicker({'timeFormat': 'H:i'});
                $('#TIMEEND').timepicker({'timeFormat': 'H:i'});
                
                $('#TIMESTARTBREAK').timepicker({'timeFormat': 'H:i'});
                $('#TIMEENDBREAK').timepicker({'timeFormat': 'H:i'});
                
                $('#CUSTOMTIMESTART').timepicker({'timeFormat': 'H:i'});
                $('#CUSTOMTIMEEND').timepicker({'timeFormat': 'H:i'});
            });
            //validate company schedule fields. pass '' to validate schedule or 'BREAK' to validate break
            function validateForm(in_fieldtype) {
                let timestartjq = $(('#TIMESTART'+in_fieldtype)); let validationfailed = false;
                let timeendjq = $(('#TIMEEND'+in_fieldtype));
                let re=/\d\d:\d\d/;
                if (re.test(timestartjq.val()) == false) {
                    timestartjq.css("border-color", "red");
                    validationfailed = true;
                }
                if (re.test(timeendjq.val()) == false) {
                    timeendjq.css("border-color", "red");
                    validationfailed = true;
                }
                if (validationfailed) {return false;}
                var time1 = timestartjq.timepicker('getTime');
                var time2 = timeendjq.timepicker('getTime');
                if (time2<time1) {
                    let time3=time1;
                    time1 = time2;
                    time2= time3;
                    $( ('#TIMESTART'+in_fieldtype) ).timepicker('setTime', time1);
                    $( ('#TIMEEND'+in_fieldtype) ).timepicker('setTime', time2);
                }
                var hours = Math.abs(time1 - time2) / 36e5;
                if ((hours<8)&&(in_fieldtype!=='')) {
                    if (confirm('{{localizedmessages["optsmsgless8hours"]|default('Difference between time is less than 8 hours. Is it OK?')}}')) {
                        return true;
                    } else {return false;}
                }
                return true;
            }
            
            
            /**
             * 
               examine for all the possible errors.
             * @return {Array|validateFormCustomTime.validationArray} - contains error codes from form validation: 'NEXTDAY' - both datetimes cannot relate to nextday, 
             * 'TIMEMISMATCH' - time start cannot exceed time end; 'NOENTITY' - no suitable entity for custom worktime selected
             *            */
            function validateFormCustomTime() {
                var validationArray = [];
                var customtimeendtypeval = $("#customtimeendtype").val();
                var customtimestarttypeval = $("#customtimestarttype").val();
                var customtimestart = $("#CUSTOMTIMESTART").val(); var customtimeend = $("#CUSTOMTIMEEND").val();
                var customentity = $("#customtimeentity").val();
                var currentDate = new Date(); var customtimestartperiod = new Date(); var customtimeendperiod = new Date();
                if ( (customtimeendtypeval == "nextday")&&(customtimestarttypeval == "nextday") ) {
                    validationArray.push("NEXTDAY");
                } else {
                    if (customtimeendtypeval == "nextday") {
                       customtimeendperiod.setDate(currentDate.getDate()+1);
                    }
                    if (customtimestarttypeval == "nextday") {
                       customtimestartperiod.setDate(currentDate.getDate()+1);
                    }
                }
                var ArrayDataTimeStart = $.map(customtimestart.split(':'), function(value){
                    return parseInt(value, 10);
                });
                var ArrayDataTimeEnd = $.map(customtimeend.split(':'), function(value){
                    return parseInt(value, 10);
                });
                customtimestartperiod.setHours(ArrayDataTimeStart[0], ArrayDataTimeStart[1]);
                customtimeendperiod.setHours(ArrayDataTimeEnd[0], ArrayDataTimeEnd[1]);
                console.log(customtimestartperiod); console.log(customtimeendperiod);
                if (customtimestartperiod>=customtimeendperiod) {
                    validationArray.push("TIMEMISMATCH");
                }
                if ((customentity === undefined)||(customentity==="empty")) {
                    validationArray.push("NOENTITY");
                }
                return validationArray;
            }
            function validateFormCustomTimeWrapper() {
                var validateResult = validateFormCustomTime(); var totalvalidation = true;
                var finaltext = "";
                if (validateResult.indexOf("NEXTDAY") != -1) {
                    finaltext += "{{localizedmessages["optsmsgnextday"]|default('Both datetimes cannot relate to next day')}} <br />";
                    $("#customtimestarttype").addClass("myformcustomtime-errorborder");
                    $("#customtimeendtype").addClass("myformcustomtime-errorborder");
                    totalvalidation = false;
                } else {
                    $("#customtimeendttype").removeClass("myformcustomtime-errorborder");
                    $("#customtimeendtype").removeClass("myformcustomtime-errorborder");
                }
                if (validateResult.indexOf("NOENTITY") != -1) {
                    finaltext += "{{localizedmessages["optsmsgnoitem"]|default('No item selected for custom worktime')}} <br />";
                    $("#customtimeentity").addClass("myformcustomtime-errorborder");
                    totalvalidation = false;
                } else {
                    $("#customtimeentity").removeClass("myformcustomtime-errorborder");
                }
                if (validateResult.indexOf("TIMEMISMATCH") != -1) {
                    finaltext += "{{localizedmessages["optsmsgtimemismatch"]|default('Time start cannot exceed time end')}} <br />";
                    $("#CUSTOMTIMESTART").addClass("myformcustomtime-errorborder");
                    $("#CUSTOMTIMEEND").addClass("myformcustomtime-errorborder");
                    totalvalidation = false;
                } else {
                    $("#CUSTOMTIMESTART").removeClass("myformcustomtime-errorborder");
                    $("#CUSTOMTIMEEND").removeClass("myformcustomtime-errorborder");
                }
                $("#myformcustomtime-errors").html(finaltext);
                console.log(validateResult);
                return totalvalidation;
            }
            function removeWorkingTimeRoutine(in_ArgToRemove, in_callbackAfterXHR) {
                //AJAX query
                var XHR = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
                var jsonbody = JSON.stringify({bcode: in_ArgToRemove});
                XHR.open("POST", "/removecustomworktime", true);
                XHR.onreadystatechange = function() {
                    if (XHR.readyState != 4) return;
                        if (XHR.status != 200) {
                            alert(XHR.status + ': ' + XHR.statusText);
                        } else {
                            var rawresponse = JSON.parse(XHR.responseText);
                            //console.log(rawresponse);
                            switch (rawresponse.status ) {
                                case 'success': {
                                in_callbackAfterXHR();
                                alert("{{localizedmessages['customworktimeremovedOK']|default('Successfully removed a custom work time for worker')}}");
                                break;
                                }
                                case 'dbfailure': {
                                    alert("{{localizedmessages['customworktimeremovedDBFAILURE']|default('FAILED TO REMOVE CUSTOM WORK TIME. DB QUERY FAILURE. CHECK removeCustomWorkTimeDB()')}}");
                                    break;
                                }
                                case 'authrequired': {
                                        alert("{{localizedmessages['customworktimeremovedNOAUTH']|default('UNAUTHORIZED')}}");
                                        break;
                                    }
                                default: {
                                        alert('bad response, see log');
                                        console.log(rawresponse);
                                    break;
                                }
                            } 
                        }
                };
                XHR.setRequestHeader('Content-Type', 'application/json');
                XHR.send(jsonbody);
            }
            
            function removeCustomWorkTimeClick(event) {
                var arg1 = event.target.getAttribute('data-btnbarcode-id');
                var callbackRemoveRow = function() {
                    //get row(s) with selected data https://api.jquery.com/attribute-equals-selector/
                    // https://stackoverflow.com/a/21756787/
                   $('tr[data-rowbarcode-id=\"'+arg1+'\"]').remove();
                };
                removeWorkingTimeRoutine( arg1, callbackRemoveRow );
            }
        </script>
    </head>
    <body>
        <div style="width:100%"> <a href="/">[<<<]</a> </div>
        {% include 'commonbar.twig' %}
        {% if addcustomworktimestatus is defined %}
            {% if addcustomworktimestatus == true %}
            <script type="text/javascript"> alert('{{localizedmessages['optscustomworktimesuccess']|default("Custom schedule added")}}');</script>
            {% elseif addcustomworktimestatus == false %} 
            <script type="text/javascript"> alert('{{localizedmessages['optscustomworktimefailure']|default("Custom schedule was not added")}}');</script>
            {% endif %}
        {%endif%}
        <h4> {{ localizedmessages['optscaption']|default('Settings page') }} </h4>
        
<div class="div-formborder">        
<form name="myform" action="/saveoptions" onsubmit="return (validateForm() && validateForm('BREAK'));" method="post">
        <p> {{ localizedmessages['optsdefaultschedule']|default('Company working hours') }} </p>
        <p> 
            <input id="TIMESTART" name="timestart" type="text" class="time" value="{{defaultschedule["TIMESTART"]}}" style="width: 105px"/> 
            <input id="TIMEEND" name="timeend"   type="text" class="time" value="{{defaultschedule["TIMEEND"]}}" style="width: 105px"/>
        </p>
        <p> {{ localizedmessages['optsdefaultbreak']|default('Company break hours') }} </p>
        <p>
            <input id="TIMESTARTBREAK" name="timestartbreak" type="text" class="time" value="{{defaultbreak["TIMESTART"]}}" style="width: 105px"/> 
            <input id="TIMEENDBREAK" name="timeendbreak"   type="text" class="time" value="{{defaultbreak["TIMEEND"]}}" style="width: 105px"/>
        </p>
        <p><input type="checkbox" id="useworkschedule" name="useschedule" {% if ((commonconfig['UWSchd'] is defined) and (commonconfig['UWSchd'])) %} checked="checked" {% endif %} value="1" onchange="recalculatelimitbyworkday(this);" ><span>{{localizedmessages["optsuseworkschedule"]}}</span></p>
        {# THE FOLLOWING LINE RELATES TO THE OPTION: USE OR NOT USE THE time only limited by work day. IT IS A BIT SOPHISTICATED... ENABLE IT WHEN IT IS CLEARLY KNOWN WHAT DOES THIS OPTION SHOULD ACTIVATE #}
        <p style="margin-left: 30px; margin-top: 0px" class="tooltip"><input type="checkbox" id="usetimeonlylimitedbyworkday" name="limitbyworkdaytime" {% if ((commonconfig['UTLWrkDay'] is defined) and (commonconfig['UTLWrkDay'])) %} checked {% endif %} 
                  {% if not((commonconfig['UWSchd'] is defined) and (commonconfig['UWSchd'])) %} disabled="disabled" {% endif %} value="1" >
            <span>{{localizedmessages["optsusetimeonlylimitedbyworkday"]}}</span> </p>
        <br />
        <input type="submit" name="submitbtn" value="{{localizedmessages["optssavecommonschedule"]|default('Save Common Company Worktime')}}">
</form>
</div>
<div class="div-formborder">
    <form name="myformcustomtime" action="/savecustomworktime" onsubmit="return validateFormCustomTimeWrapper();" method="post">
        <p> {{ localizedmessages['optscustomtimeheader']|default('Custom work time for worker (overrides a common schedule)') }} </p>
        {% if barcodeentrylistfrm is empty %}
        <p style="color:red">{{localizedmessages["optsmsgnowrokersindb"]|default('barcodes list is empty!')}}</p>
        {% endif %}
        <div style="width:80%; margin-left: auto; margin-right: auto;" class="clearfix">
            <div style="width:59%; float: left">
                <div style="width:100%">
                    <span> {{ localizedmessages['optscustomtimestart']|default('Start time') }} </span>
                    <input id="CUSTOMTIMESTART" name="customtimestart" type="text" class="time" value="{{defaultschedule["TIMESTART"]}}" style="width: 105px"/> 
                    <select name="customtimestarttype" id="customtimestarttype"> 
                        <option value="currentday" selected>{{ localizedmessages['optscurrentdayselect']|default('Current day') }}</option> 
                        <option value="nextday">{{ localizedmessages['optsnextdayselect']|default('Next day') }}</option> 
                    </select>
                </div>
                <div style="width:100%">
                    <span> {{ localizedmessages['optscustomtimeend']|default('End time') }} </span>
                    <input id="CUSTOMTIMEEND" name="customtimeend" type="text" class="time" value="{{defaultschedule["TIMEEND"]}}" style="width: 105px"/> 
                    <select name="customtimeendtype" id="customtimeendtype"> 
                        <option value="currentday" selected>{{ localizedmessages['optscurrentdayselect']|default('Current day') }}</option> 
                        <option value="nextday">{{ localizedmessages['optsnextdayselect']|default('Next day') }}</option> 
                    </select>
                </div>
            </div>
            <div style="width:29%; float: left">
                <select name="customtimeentity" id="customtimeentity"> 
                {# list here users #}
                <option value="empty">&nbsp;</option>
            {% for singlebarcodeentryobj in barcodeentrylistfrm %}
                <option value="{{singlebarcodeentryobj.ID}}">{{singlebarcodeentryobj.FIELD1|default("_")}} {{singlebarcodeentryobj.FIELD2|default("_")}} {{singlebarcodeentryobj.FIELD3|default("_")}}</option>
            {% endfor %}
                </select>
            </div>
        </div>
            <input type="submit" value="{{ localizedmessages['optssavecustomworktime']|default('Save Custom Worktime') }}"/>
            <p id="myformcustomtime-errors"> </p>
    </form>
    <table class="stat-data">
        <thead class="stat-data">
            <tr class="stat-data"> 
                <th class="stat-data">
                {{localizedmessages["optscustomworktimeheaderentity"]|default('ENTRY')}}
                </th>
                <th class="stat-data" colspan="2">
                    {{localizedmessages['optscustomworktimeheadertimestart']|default('Starting time')}}
                </th>
                <th class="stat-data" colspan="2">
                    {{localizedmessages['optscustomworktimeheadertimeend']|default('Finishing time')}}
                </th>
                
            </tr>
        </thead>
        {% for key,item in customworktimearray %}
        <tr class="stat-data" data-rowbarcode-id="{{key}}">
            <td class="stat-data"> {{item.BARCODE_FLD1}} {{item.BARCODE_FLD2}} {{item.BARCODE_FLD3}} </td>
            <td class="stat-data"> {{item.START_TIME}} </td>
            <td class="stat-data"> {{localizedmessages[item.START_TIME_TYPE]}} </td>
            <td class="stat-data"> {{item.END_TIME}} </td>
            <td class="stat-data"> {{localizedmessages[item.END_TIME_TYPE]}} </td>
            <td style="border: none"> 
                <input type="button" data-btnbarcode-id="{{key}}" value="{{localizedmessages["optssingleremovebtn"]}}" onclick="removeCustomWorkTimeClick(event);">
            </td>
        </tr>
        {% endfor %}
    </table>
</div>
        
    </body>
</html>